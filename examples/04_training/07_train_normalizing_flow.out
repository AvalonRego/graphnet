graphnet [MainProcess] WARNING  2024-11-27 20:31:07 - has_icecube_package - `icecube` not available. Some functionality may be missing.
Meander not installed... contours can not be calculated.
graphnet [MainProcess] INFO     2024-11-27 20:31:09 - Logger.__init__ - Writing log to logs/graphnet_20241127-203109.log
graphnet [MainProcess] INFO     2024-11-27 20:31:09 - main - features: ['sensor_pos_x', 'sensor_pos_y', 'sensor_pos_z', 't']
graphnet [MainProcess] INFO     2024-11-27 20:31:09 - main - truth: ['injection_energy', 'injection_type', 'injection_interaction_type', 'injection_zenith', 'injection_azimuth', 'injection_bjorkenx', 'injection_bjorkeny', 'injection_position_x', 'injection_position_y', 'injection_position_z', 'injection_column_depth', 'primary_lepton_1_type', 'primary_hadron_1_type', 'primary_lepton_1_position_x', 'primary_lepton_1_position_y', 'primary_lepton_1_position_z', 'primary_hadron_1_position_x', 'primary_hadron_1_position_y', 'primary_hadron_1_position_z', 'primary_lepton_1_direction_theta', 'primary_lepton_1_direction_phi', 'primary_hadron_1_direction_theta', 'primary_hadron_1_direction_phi', 'primary_lepton_1_energy', 'primary_hadron_1_energy', 'total_energy']
sub-manifold (0 - e1 - gggt) and intra-manifold flow (0 - g) - using *default* options
sub-manifold (0 - e1 - gggt) and intra-manifold flow (1 - g) - using *default* options
sub-manifold (0 - e1 - gggt) and intra-manifold flow (2 - g) - using *default* options
sub-manifold (0 - e1 - gggt) and intra-manifold flow (3 - t) - using *default* options
graphnet [MainProcess] INFO     2024-11-27 20:31:09 - NormalizingFlow._create_default_callbacks - EarlyStopping has been added with a patience of 5.
graphnet [MainProcess] INFO     2024-11-27 20:31:09 - NormalizingFlow._print_callbacks - Training initiated with callbacks: ProgressBar, EarlyStopping, ModelCheckpoint
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/raven/u/arego/graphnet-venv-cuda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
You are using a CUDA device ('NVIDIA A100-SXM4-40GB') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/1
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 1 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
/raven/u/arego/graphnet-venv-cuda/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:28: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.
  warnings.warn("The verbose parameter is deprecated. Please use get_last_lr() "

  | Name              | Type        | Params | Mode 
----------------------------------------------------------
0 | _tasks            | ModuleList  | 28.8 K | train
1 | _graph_definition | KNNGraph    | 0      | train
2 | backbone          | DynEdge     | 1.4 M  | train
3 | _norm             | BatchNorm1d | 256    | train
----------------------------------------------------------
1.4 M     Trainable params
0         Non-trainable params
1.4 M     Total params
5.631     Total estimated model params size (MB)
47        Modules in train mode
0         Modules in eval mode
SLURM auto-requeueing enabled. Setting signal handlers.
Epoch  0: 100%|████████████████████████| 1/1 [00:01<00:00,  0.86 batch(es)/s, lr=1e-5, val_loss=94.60, train_loss=94.60]`Trainer.fit` stopped: `max_epochs=1` reached.                                                                          
Epoch  0: 100%|████████████████████████| 1/1 [00:01<00:00,  0.82 batch(es)/s, lr=1e-5, val_loss=94.60, train_loss=94.60]
graphnet [MainProcess] INFO     2024-11-27 20:31:14 - NormalizingFlow.fit - Best-fit weights from EarlyStopping loaded.
graphnet [MainProcess] INFO     2024-11-27 20:31:14 - NormalizingFlow.predict_as_dataframe - Column names for predictions are: 
 ['nllh']
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
SLURM auto-requeueing enabled. Setting signal handlers.
Predicting DataLoader 0: 100%|████████████████████████████████████████████████████| 1/1 [00:00<00:00, 57.26 batch(es)/s]
graphnet [MainProcess] INFO     2024-11-27 20:31:15 - main - Writing results to /raven/u/arego/graphnet/data/examples/output/train_model_without_configs/prometheus-events/dynedge_total_energy_example
graphnet [MainProcess] INFO     2024-11-27 20:31:15 - NormalizingFlow.save - Model saved to /raven/u/arego/graphnet/data/examples/output/train_model_without_configs/prometheus-events/dynedge_total_energy_example/model.pth
graphnet [MainProcess] INFO     2024-11-27 20:31:15 - NormalizingFlow.save_state_dict - Model state_dict saved to /raven/u/arego/graphnet/data/examples/output/train_model_without_configs/prometheus-events/dynedge_total_energy_example/state_dict.pth